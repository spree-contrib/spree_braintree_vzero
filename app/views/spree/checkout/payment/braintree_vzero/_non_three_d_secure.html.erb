<script type="text/javascript">
  if(document.readyState !== 'loading') {
    setupPayment()
  } else {
    window.addEventListener('DOMContentLoaded', setupPayment);
  }

  function setupPayment() {
    $('#order_payments_attributes__payment_method_id_<%= payment_method.id %>').click(function (e) {
    var threeDSecure;
    var checkoutFormId = "<%= payment_method.preferred_checkout_form_id %>"
    var formId = "#" + checkoutFormId;

    var clientToken = "<%= payment_method.client_token(@order) %>";

    <% if hosted %>
      var hf, threeDS;
      var hostedFieldsContainer = document.getElementById('hosted-fields');
    <% elsif dropin %>
      var dropin;
    <% end %>

    var payBtn = document.getElementsByName('commit')[0];
    var payGroup = $('.pay-group');

    $('.credit-card-pay-success').css('display', 'none');
    $('.credit-card-pay-errors').css('display', 'none');

    function start() {
      getClientToken();
    }

    function getClientToken() {
      onFetchClientToken(clientToken);
    }

    function setupComponents (clientToken) {
      return Promise.all([
        braintree.hostedFields.create({
          authorization: clientToken,
          styles: {
            input: {
              'font-size': '14px',
              'font-family': 'monospace'
            }
          },
          fields: {
            number: {
              <% if payment_method.respond_to?(:preferred_number_selector) && payment_method.preferred_number_selector.present? %>
                selector: "<%= payment_method.preferred_number_selector %>"
              <% else %>
                selector: '#hosted-fields-number'
              <% end %>
            },
            cvv: {
              <% if payment_method.respond_to?(:preferred_cvv_selector) && payment_method.preferred_cvv_selector.present? %>
                selector: "<%= payment_method.preferred_cvv_selector %>"
              <% else %>
                selector: '#hosted-fields-cvv'
              <% end %>
            },
            expirationDate: {
              <% if payment_method.respond_to?(:preferred_expiration_date_selector) && payment_method.preferred_expiration_date_selector.present? %>
                selector: "<%= payment_method.preferred_expiration_date_selector %>"
              <% else %>
                selector: '#hosted-fields-expiration-date'
              <% end %>
            }
          }
        })
      ]);
    }

    function setupDropin (clientToken) {
      return braintree.dropin.create({
        authorization: clientToken,
        container: '#drop-in'
      })
    }

    function onFetchClientToken(clientToken) {
      <% if hosted %>
      return setupComponents(clientToken).then(function(instances) {
        hf = instances[0];
        threeDS = instances[1];
        <% elsif dropin %>
        return setupDropin(clientToken).then(function(instance) {
          dropin = instance;
          <% end %>

          setupForm();
        }).catch(function (err) {
          console.log('component error:', err);
        });
      }

      function setupForm() {
        enablePayNow();
      }

      function enablePayNow() {
        payBtn.value = "<%= Spree.t(:save_and_continue) %>";
        payBtn.removeAttribute('disabled');
      }

      function showErrors(err) {
        if (err) {
          if (err.details && err.details.invalidFields) {
            const invalidFields = []
            Object.keys(err.details.invalidFields).forEach(function (key) {
              if (key === "expirationDate") {
                invalidFields.push("expiration")
              } else {
                invalidFields.push(key)
              }
            })
            const errorString = invalidFields.join(", ")
            const linkingVerb = invalidFields.length > 1 ? "are" : "is"

            $('.credit-card-pay-errors').text("Card " + errorString + " " + linkingVerb + " incorrect.")
          }
        }
        payGroup.addClass('hidden');
        payGroup.css('display', 'none');
        $('.credit-card-pay-success').css('display', 'none');
        $('.credit-card-pay-errors').css('display', 'block');
      }

      function showSuccess() {
        payGroup.addClass('hidden');
        payGroup.css('display', 'none');
        <% if hosted %>
        hostedFieldsContainer.style.display = 'none';
        <% end %>
        $('.credit-card-pay-success').css('display', 'block');
        $('.credit-card-pay-errors').css('display', 'none');
      }

      payBtn.addEventListener('click', function(event) {
        event.preventDefault()
        payBtn.setAttribute('disabled', 'disabled');
        payBtn.value = "<%= Spree.t(:processing_credit_card) %>";

        <% if hosted %>
          hf.tokenize().then(function (payload) {
        <% elsif dropin %>
          dropin.requestPaymentMethod(
          function(err, payload) {
            if (err) {
              console.log('tokenization error:');
              console.log(err);
              dropin.clearSelectedPaymentMethod();
              enablePayNow();

              return;
            }
        <% end %>

            $(formId).append("<input type='hidden' name='braintree_last_two' value=" + payload.details.lastTwo + ">");
            $(formId).append("<input type='hidden' name='braintree_card_type' value=" + payload.details.cardType.replace(/\s/g, "") + ">");
            $(formId).append("<input type='hidden' name='order[payments_attributes][][braintree_nonce]' value=" + payload.nonce + ">");
            $(formId).append("<input type='hidden' name='payment_method_nonce' value=" + payload.nonce + ">");
            setTimeout(function () {
              $(payBtn).attr("disabled", false)
              $('#checkout form').submit()
            }, 200);
            <% if hosted %>
              }).catch(function (err) {
                enablePayNow();
                showErrors(err);
            <% end %>
              });
          });

          start();
      });
    }
</script>
